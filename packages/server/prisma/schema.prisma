generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["debian-openssl-1.1.x", "native"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Admin {
    id             Int      @id @default(autoincrement())
    email          String   @unique
    fullName       String
    profilePicture String?
    password       String
    userId         String
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model User {
    id             Int          @id @default(autoincrement())
    email          String       @unique
    mobile         String?
    fullName       String
    profilePicture String?
    password       String
    userId         String       @unique
    dateOfBirth    DateTime?
    timeZone       String       @default("IST")
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt
    userSetting    UserSetting?
    userTabs       UserTab[]
    isDeleted      Boolean      @default(false)
}

enum ColumnNumber {
    THREE
    FOUR
    FIVE
}

model UserSetting {
    id                             Int          @id @default(autoincrement())
    userIdentifier                 String       @unique
    user                           User         @relation(fields: [userIdentifier], references: [userId])
    isDarkMode                     Boolean      @default(true)
    numberOfColumns                ColumnNumber
    showNumberOfBookmarkInTab      Boolean      @default(false)
    showNumberOfBookmarkInCategory Boolean      @default(false)
    showTagsInTooltip              Boolean      @default(false)
    showNoteInTooltip              Boolean      @default(false)
    allowDragDropToMoveLink        Boolean      @default(true)
    createdAt                      DateTime     @default(now())
    updatedAt                      DateTime     @updatedAt
}

model UserTab {
    id         Int        @id @default(autoincrement())
    identifier String     @unique
    userId     Int
    user       User       @relation(fields: [userId], references: [id])
    name       String
    order      Int
    categories Category[]
    createdAt  DateTime   @default(now())
    updatedAt  DateTime   @updatedAt
    isDeleted  Boolean    @default(false)
}

model Category {
    id            Int      @id @default(autoincrement())
    identifier    String   @unique
    name          String
    order         Int
    color         String
    icon          String?
    tabIdentifier String
    tab           UserTab  @relation(fields: [tabIdentifier], references: [identifier])
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    links         Link[]
    isDeleted     Boolean  @default(false)
}

model Link {
    id                 Int             @id @default(autoincrement())
    identifier         String          @unique
    title              String
    url                String
    order              Int
    icon               String?
    notes              String?
    linkTags           LinkTag[]
    linkHiddenTags     LinkHiddenTag[]
    category           Category?       @relation(fields: [categoryIdentifier], references: [identifier])
    categoryIdentifier String?
    createdAt          DateTime        @default(now())
    updatedAt          DateTime        @updatedAt
    isDeleted          Boolean         @default(false)
}

model Tag {
    id         Int       @id @default(autoincrement())
    identifier String    @unique
    name       String
    order      Int // for priority
    linkTags   LinkTag[]
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    isDeleted  Boolean   @default(false)
}

model HiddenTag {
    id             Int             @id @default(autoincrement())
    identifier     String          @unique
    name           String
    order          Int
    linkHiddenTags LinkHiddenTag[]
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @updatedAt
    isDeleted      Boolean         @default(false)
}

model LinkTag {
    id             Int    @id @default(autoincrement())
    linkIdentifier String
    tagIdentifier  String
    link           Link   @relation(fields: [linkIdentifier], references: [identifier])
    tag            Tag    @relation(fields: [tagIdentifier], references: [identifier])
}

model LinkHiddenTag {
    id                  Int       @id @default(autoincrement())
    linkIdentifier      String
    hiddenTagIdentifier String
    link                Link      @relation(fields: [linkIdentifier], references: [identifier])
    hiddenTag           HiddenTag @relation(fields: [hiddenTagIdentifier], references: [identifier])
}
